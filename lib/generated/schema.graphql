type Contact {
  _id: ObjectID!
  updatedAt: DateTime!
  name: String!
  phone: String
  archived: Boolean
}

input ContactFilter {
  archived: Boolean
}

input ContactInput {
  _id: ID
  name: String
  phone: String
}

scalar DateTime

enum HighLow {
  LOW
  HIGH
}

type Mutation {
  _: Boolean
  saveContact(contact: ContactInput!): Contact
}

scalar ObjectID

type Query {
  _: Boolean
  getContact(id: ID!): Contact
  getContacts(filter: ContactFilter): [Contact!]!
  getTelemetries(filter: TelemetryFilter!): [Telemetry]
  getTelemetry(ID: ObjectID!): Telemetry
}

type Telemetry {
  _id: ObjectID!
  deviceId: String!
  lat: Float!
  lng: Float!
  level: Float!
  battery: Float!
  updatedAt: DateTime!
}

input TelemetryFilter {
  level: HighLow
  battery: HighLow
  online: YesNo
  sort: TelemetrySort
}

enum TelemetrySort {
  URGENT
  NEWEST
  OLDEST
  BATTERY_LOW
  BATTERY_HIGH
  LEVEL_LOW
  LEVEL_HIGH
}

enum YesNo {
  YES
  NO
}
